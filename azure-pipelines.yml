trigger:
- master

pool:
  vmImage: 'windows-latest'

stages:
- stage: Build_Stage
  displayName: 
  jobs:
  - job: BuildNuget
    displayName: Build Nuget packages
    variables:
      BuildConfiguration: release
    steps:

    - task: DotNetCoreCLI@2
      inputs:
        command: 'restore'
        projects: '**/*.csproj'
        feedsToUse: 'select'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        projects: '**/*.csproj'
        arguments: '--configuration $(BuildConfiguration)'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'pack'
        packagesToPack: '**/*.csproj'
        versioningScheme: 'off'
    
         
    - task: DotNetCoreCLI@2
      inputs:
        command: 'push'
        packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
        nuGetFeedType: 'internal'
        publishVstsFeed: 'fb58a91b-8a3f-4371-9694-c0cd0cdcdad3/4e7e4cdd-1378-41d2-8a5d-3797cede094c'

- stage: Deploy_Stage
  jobs:
  - deployment: DeployWeb
    displayName: deploy Web App
    pool:
      name: 'pool1'
    # creates an environment if it doesn't exist
    environment: 'smarthotel-dev'
    strategy:
      runOnce:
        deploy:
          steps:
          - script: echo Hello world